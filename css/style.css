/* selektor uniwersalny - wybiera wszystkie znaczniki z HTML */
* {
    color: red;
}

/* selektor laczony, pozwala nam na polaczenie np. element.klasa / .klasa#id itd. */
li.list-item {
    color: green;
}

/* pseudo-elementy - elementy, ktore nie istnieja w drzewie dokumentu (HTML), ale mozemy zamarkowac ich istnienie. Zapisujemy za pomoca podwojnego dwukropka (::), mozemy ustawiac przed lub za znacznikiem HTML. Nie istnieja, dopoki nie ustawimy wlasciwosci "content" */
ul {
    list-style: none;
}

/* selektor klasy z pseudoelementem */
.list-item::before {
    content: '*';
}

/* pseudoklasy - najczesciej uzywane w stosunku do dzialan uzytkownika */

/* :hover - najechanie myszka */
.list-item a:hover {
    color: yellow;
}

/* :focus - aktywne pole formularza */
input:focus {
    border: 2px solid red;
}

/* pseudo klasy potomstwa - zwracamy uwage na relacje pomiedzy znacznikami (w tym przypadku, pierwsze dziecko) */

/* grupowanie selektorow - za pomoca przecinka*/
ul li:first-child,
ul li:last-child {
    color: blue;
}

/* :nth-of-child - zwracamy uwage na relacje pomiedzy znacznikami (rodzic - potomstwo) */
/* :nth-of-type - zwracamy uwage na konkretne znaczniki (typ) */
/*
.list-item:nth-of-type(even) a {
    color: blueviolet;
}

.list-item:nth-of-type(3n+2) a {
    color: blueviolet;
}
*/
li:nth-child(3n+2) a {
    color: blueviolet;
}

/* selektory atrybuow */
/* po nazwie konkretnego atrybutu */
input[title] {
    border: 5px solid yellow;
}

/* po konkretnej wartosci atrybutu */
input[title="drugi"] {
    border: 5px solid red;
}

/* czy zawiera konkretny napis */
input[title~="opis"] {
    border: 5px solid violet;
}

/* czy zawiera konkretny ciag znakow */
input[title*="wart"] {
    border: 5px solid grey;
}

/* zaczyna sie na ciag znakow */
input[title^="pie"] {
    border: 5px solid blue;
}

/* konczy sie na ciag znakow */
input[title$="y"] {
    border: 5px solid green;
}

/* pozycjonowanie */
#pozycje {
    height: 300px;
    background-color: green;
    /* pozycja relatywna odsuwa dany element od miejsca, w ktorym normalnie by sie znalazl (jak wynikaloby z html) */
    position: relative;
}

#pozycje .blue {
    background-color: blue;
}

#pozycje .red {
    background-color: red;
    left: 100px;
    top: 35px;
    /* pozycja absolutna odsuwa element od innego elementu, ktory jest pozycjonowany inaczej niz statycznie. Jezeli nie znajdzie takiego elementu, odsuwa sie od body*/
    position: absolute;
    margin: 0;
}

#pozycje p {
    color: white;
}

#main-nav {
    /* pozycja zafiksowana pozwala pozycjonowac element wzgledem okna przegladarki, podajemy wysoki z-index, zeby element nie zostal przykryty przez np. element pozycjonowany relatywnie */
    position: fixed;
    z-index: 9999999;
    width: 100%;
    left: 0;
    top: 0;
}










